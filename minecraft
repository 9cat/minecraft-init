#!/bin/bash
# /etc/init.d/minecraft

### BEGIN INIT INFO
# Provides:   minecraft
# Required-Start: $local_fs $remote_fs
# Required-Stop:  $local_fs $remote_fs
# Should-Start:   $network
# Should-Stop:    $network
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Short-Description:    Minecraft server
# Description:    Starts the minecraft server
### END INIT INFO

#Settings
SERVICE='craftbukkit-0.0.1-SNAPSHOT.jar'
USERNAME="v"
MCPATH='/home/v/mine'
CPU_COUNT=2
INVOCATION="java -Xmx760M -Xms760M -XX:+UseConcMarkSweepGC -XX:+CMSIncrementalPacing -XX:ParallelGCThreads=$CPU_COUNT -XX:+AggressiveOpts -jar $SERVICE nogui"
BACKUPPATH='/home/v/minebak'
WORLDSTORAGE=/home/v/mine/diskworld #Acctuall path to world
RAMDISK=/dev/shm


ME=`whoami`
as_user() {
  if [ $ME == $USERNAME ] ; then
    bash -c "$1"
  else
    su - $USERNAME -c "$1"
  fi
}

mc_start() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
  then
    echo "Tried to start but $SERVICE was already running!"
  else
    echo "$SERVICE was not running... starting."
    # rsync -tr $MCPATH/world-disc /dev/shm/
    cd $MCPATH
    as_user "cd $MCPATH && screen -dmS minecraft $INVOCATION"
    sleep 7
    if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
    then
      echo "$SERVICE is now running."
    else
      echo "Could not start $SERVICE."
    fi
  fi
}

mc_saveoff() {
        if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
	then
		echo "$SERVICE is running... suspending saves"
		# as_user "screen -p 0 -S minecraft -X eval 'stuff \"say Backing up world.\"\015'"
                as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-off\"\015'"
                as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-all\"\015'"
                sync
		sleep 10
	else
                echo "$SERVICE was not running. Not suspending saves."
	fi
}

mc_saveon() {
        if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
	then
		echo "$SERVICE is running... re-enabling saves"
                as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-on\"\015'"
                # as_user "screen -p 0 -S minecraft -X eval 'stuff \"say World backup complete. \"\015'"
	else
                echo "$SERVICE was not running. Not resuming saves."
	fi
}

mc_stop() {
        if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
        then
                echo "$SERVICE is running... stopping."
                as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-all\"\015'"
                sleep 10
                as_user "screen -p 0 -S minecraft -X eval 'stuff \"stop\"\015'"
                sleep 7
        else
                echo "$SERVICE was not running."
        fi
        if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
        then
                echo "$SERVICE could not be shut down... still running."
        else
                echo "$SERVICE is shut down."
        fi
}


mc_update() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
  then
    echo "$SERVICE is running! Will not start update."
  else
    MC_SERVER_URL=http://minecraft.net/`wget -q -O - http://www.minecraft.net/download.jsp | grep minecraft_server.jar\</a\> | cut -d \" -f 2`
    as_user "cd $MCPATH && wget -q -O $MCPATH/minecraft_server.jar.update $MC_SERVER_URL"
    if [ -f $MCPATH/minecraft_server.jar.update ]
    then
      if `diff $MCPATH/minecraft_server.jar $MCPATH/minecraft_server.jar.update >/dev/null`
        then 
          echo "You are already running the latest version of $SERVICE."
        else
          as_user "mv $MCPATH/minecraft_server.jar.update $MCPATH/minecraft_server.jar"
          echo "Minecraft successfully updated."
      fi
    else
      echo "Minecraft update could not be downloaded."
    fi
  fi
}
log_roll() {
	mc_stop
	DATE=`date "+%Y-%m-%d"`
	mv $MCPATH/server.log $MCPATH/logs/server-$DATE.log
	gzip $MCPATH/logs/server-$DATE.log
	mc_start
}
mc_world_backup() {
# Changing to .bz2 compression
   echo "Backing up minecraft world"
   if [ -e $BACKUPPATH/world_`date "+%Y.%m.%d"`.tar.bz2 ]
   then
     for i in 1 2 3 4 5 6
     do
       if [ -e $BACKUPPATH/world_`date "+%Y.%m.%d"`-$i.tar.bz2 ]
       then
         continue
       else
         as_user "cd $MCPATH && tar -cjf $BACKUPPATH/world_`date "+%Y.%m.%d"`-$i.tar.bz2 world"
         break
       fi
     done
   else
     as_user "cd $MCPATH && tar -cjf $BACKUPPATH/world_`date "+%Y.%m.%d"`.tar.bz2 world"
     echo "Backed up world"
   fi
}
to_ram() {
	if [ -L $MCPATH/world ]
	then
		as_user "rsync -rvt $WORLDSTORAGE/ $RAMDISK/world"
	fi
}
to_disk() {
	as_user "rsync -rvt $MCPATH/world/ $WORLDSTORAGE"
}

#Start-Stop here
case "$1" in
  start)
    to_ram
    mc_start
    ;;
  stop)
    as_user "screen -p 0 -S minecraft -X eval 'stuff \"say SERVER SHUTTING DOWN!\"\015'"
    mc_stop
    to_disk
    ;;
  restart)
    as_user "screen -p 0 -S minecraft -X eval 'stuff \"say SERVER REBOOT IN 10 SECONDS.\"\015'"
    mc_stop
    mc_start
    ;;
  backup)
    as_user "screen -p 0 -S minecraft -X eval 'stuff \"say Backing up world.\"\015'"
    mc_saveoff
    mc_world_backup
    mc_saveon
    as_user "screen -p 0 -S minecraft -X eval 'stuff \"say Backup complete.\"\015'"
    ;;
  to-disk)
    mc_saveoff
    as_user "screen -p 0 -S minecraft -X eval 'stuff \"say .\"\015'"
    to_disk
    mc_saveon
    ;;
  connected)
    as_user "screen -p 0 -S minecraft -X eval 'stuff list\015'"
    sleep 3s
    tac $MCPATH/server.log | grep -m 1 "Connected"
    ;;
  log-roll)
  as_user "screen -p 0 -S minecraft -X eval 'stuff \"say SERVER REBOOT IN 10 SECONDS.\"\015'"
    mc_stop
    log_roll 
    mc_start
    ;;
  status)
    if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
    then
      echo "$SERVICE is running."
    else
      echo "$SERVICE is not running."
    fi
    ;;

  *)
  echo "Usage: /etc/init.d/minecraft {start|stop|backup|backup-all|connected|status|restart}"
  exit 1
  ;;
esac

exit 0
